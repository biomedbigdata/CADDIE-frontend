stages:
  - setup
  - check
  - build
  - deploy

cache:
  paths:
    - node_modules/

setup:
  image: registry.blitzhub.io/ng_cli_karma
  stage: setup
  script:
    - npm install

check:lint:
  image: registry.blitzhub.io/ng_cli_karma
  stage: check
  script:
    - npm install
    # - npm run lint
  dependencies:
    - setup

#check:test:
#  image: trion/ng-cli-karma
#  stage: check
#  script:
#    - npm install
#    - ng test
#  dependencies:
#    - setup

build:
  image: registry.blitzhub.io/ng_cli_karma
  stage: build
  artifacts:
    paths:
      - dist
  script:
    - npm install
    - npm run build --max_old_space_size=4096 --prod
  dependencies:
    - check:lint
#    - check:test

deploy:dev:
  image: registry.blitzhub.io/docker
  stage: deploy
  only:
    - master
  services:
    - name: registry.blitzhub.io/docker:dind
      alias: docker
  variables:
    CONTAINER_HOSTNAME: docker
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t gitlab.lrz.de:5005/caddie/frontend:dev -f ./Dockerfile.dev .
    - docker push gitlab.lrz.de:5005/caddie/frontend:dev
  dependencies:
    - build

deploy:prod:
  image: registry.blitzhub.io/docker
  stage: deploy
  only:
    - production
  when: manual
  services:
    - name: registry.blitzhub.io/docker:dind
      alias: docker
  variables:
    CONTAINER_HOSTNAME: docker
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t gitlab.lrz.de:5005/caddie/frontend:prod -f ./Dockerfile.prod .
    - docker push gitlab.lrz.de:5005/caddie/frontend:prod
    - docker build -t gitlab.lrz.de:5005/caddie/frontend:uhh -f ./Dockerfile.uhh.prod .
    - docker push gitlab.lrz.de:5005/caddie/frontend:uhh
  dependencies:
    - build

